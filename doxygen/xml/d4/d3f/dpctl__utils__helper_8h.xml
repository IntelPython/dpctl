<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d4/d3f/dpctl__utils__helper_8h" kind="file" language="C++">
    <compoundname>dpctl_utils_helper.h</compoundname>
    <includes local="no">CL/sycl.hpp</includes>
    <includedby refid="d3/d5b/dpctl__utils__helper_8cpp" local="yes">dpctl_utils_helper.cpp</includedby>
    <includedby refid="de/dc3/dpctl__sycl__device__interface_8cpp" local="yes">dpctl_sycl_device_interface.cpp</includedby>
    <includedby refid="d5/da7/dpctl__sycl__platform__interface_8cpp" local="yes">dpctl_sycl_platform_interface.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>CL/sycl.hpp</label>
      </node>
      <node id="1">
        <label>dpctl_utils_helper.h</label>
        <link refid="d4/d3f/dpctl__utils__helper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>dpctl_sycl_platform_interface.cpp</label>
        <link refid="d5/da7/dpctl__sycl__platform__interface_8cpp"/>
      </node>
      <node id="2">
        <label>dpctl_utils_helper.cpp</label>
        <link refid="d3/d5b/dpctl__utils__helper_8cpp"/>
      </node>
      <node id="1">
        <label>dpctl_utils_helper.h</label>
        <link refid="d4/d3f/dpctl__utils__helper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>dpctl_sycl_device_interface.cpp</label>
        <link refid="de/dc3/dpctl__sycl__device__interface_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="d4/df1/namespacecl_1_1sycl">cl::sycl</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="d4/d3f/dpctl__utils__helper_8h_1a7848b5c8fe0b26236e350fa0d11d86fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DPCTL_DeviceTypeToStr</definition>
        <argsstring>(info::device_type devTy)</argsstring>
        <name>DPCTL_DeviceTypeToStr</name>
        <param>
          <type>info::device_type</type>
          <declname>devTy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transforms enum info::device_type to string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/dpctl-capi/helper/include/dpctl_utils_helper.h" line="30" column="13" bodyfile="/home/diptorupd/Desktop/devel/dpctl/dpctl-capi/helper/source/dpctl_utils_helper.cpp" bodystart="35" bodyend="59" declfile="/home/diptorupd/Desktop/devel/dpctl/dpctl-capi/helper/include/dpctl_utils_helper.h" declline="30" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/dpctl__utils__helper_8h_1af12ff9e60432ae08466e4095b5a4ef76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>info::device_type</type>
        <definition>info::device_type DPCTL_StrToDeviceType</definition>
        <argsstring>(std::string devTyStr)</argsstring>
        <name>DPCTL_StrToDeviceType</name>
        <param>
          <type>std::string</type>
          <declname>devTyStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transforms string to enum info::device_type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/diptorupd/Desktop/devel/dpctl/dpctl-capi/helper/include/dpctl_utils_helper.h" line="31" column="19" bodyfile="/home/diptorupd/Desktop/devel/dpctl/dpctl-capi/helper/source/dpctl_utils_helper.cpp" bodystart="64" bodyend="82" declfile="/home/diptorupd/Desktop/devel/dpctl/dpctl-capi/helper/include/dpctl_utils_helper.h" declline="31" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This file defines common helper functions used in other places in DPCTL. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===------------------<sp/>dpctl_utils.h<sp/>-<sp/>dpctl-C_API<sp/>---*---<sp/>C++<sp/>-----*-----===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>Library<sp/>(dpCtl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/sycl.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">cl::sycl;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">std::string<sp/><ref refid="d4/d3f/dpctl__utils__helper_8h_1a7848b5c8fe0b26236e350fa0d11d86fa" kindref="member">DPCTL_DeviceTypeToStr</ref>(info::device_type<sp/>devTy);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">info::device_type<sp/><ref refid="d4/d3f/dpctl__utils__helper_8h_1af12ff9e60432ae08466e4095b5a4ef76" kindref="member">DPCTL_StrToDeviceType</ref>(std::string<sp/>devTyStr);</highlight></codeline>
    </programlisting>
    <location file="/home/diptorupd/Desktop/devel/dpctl/dpctl-capi/helper/include/dpctl_utils_helper.h"/>
  </compounddef>
</doxygen>
