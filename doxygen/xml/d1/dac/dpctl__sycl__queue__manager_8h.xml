<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="d1/dac/dpctl__sycl__queue__manager_8h" kind="file" language="C++">
    <compoundname>dpctl_sycl_queue_manager.h</compoundname>
    <includes refid="dd/d1c/dpctl__data__types_8h" local="yes">dpctl_data_types.h</includes>
    <includes refid="df/d57/dpctl__sycl__types_8h" local="yes">dpctl_sycl_types.h</includes>
    <includes refid="df/d74/dpctl__sycl__context__interface_8h" local="yes">dpctl_sycl_context_interface.h</includes>
    <includes refid="d4/d5a/dpctl__sycl__device__interface_8h" local="yes">dpctl_sycl_device_interface.h</includes>
    <includes refid="d6/d26/DllExport_8h" local="yes">Support/DllExport.h</includes>
    <includes refid="d2/d0a/ExternC_8h" local="yes">Support/ExternC.h</includes>
    <includes refid="d4/d8c/MemOwnershipAttrs_8h" local="yes">Support/MemOwnershipAttrs.h</includes>
    <includedby refid="d2/db7/dpctl__sycl__queue__manager_8cpp" local="yes">dpctl_sycl_queue_manager.cpp</includedby>
    <incdepgraph>
      <node id="13">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>dpctl_data_types.h</label>
        <link refid="dd/d1c/dpctl__data__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>dpctl_sycl_types.h</label>
        <link refid="df/d57/dpctl__sycl__types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>dpctl_sycl_enum_types.h</label>
        <link refid="d3/d94/dpctl__sycl__enum__types_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>dpctl_sycl_platform_interface.h</label>
        <link refid="d3/d02/dpctl__sycl__platform__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>dpctl_sycl_queue_manager.h</label>
        <link refid="d1/dac/dpctl__sycl__queue__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Support/DllExport.h</label>
        <link refid="d6/d26/DllExport_8h"/>
      </node>
      <node id="8">
        <label>dpctl_sycl_context_interface.h</label>
        <link refid="df/d74/dpctl__sycl__context__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sys/types.h</label>
      </node>
      <node id="12">
        <label>Support/MemOwnershipAttrs.h</label>
        <link refid="d4/d8c/MemOwnershipAttrs_8h"/>
      </node>
      <node id="7">
        <label>Support/ExternC.h</label>
        <link refid="d2/d0a/ExternC_8h"/>
      </node>
      <node id="14">
        <label>dpctl_sycl_device_interface.h</label>
        <link refid="d4/d5a/dpctl__sycl__device__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>dpctl_sycl_queue_manager.cpp</label>
        <link refid="d2/db7/dpctl__sycl__queue__manager_8cpp"/>
      </node>
      <node id="1">
        <label>dpctl_sycl_queue_manager.h</label>
        <link refid="d1/dac/dpctl__sycl__queue__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1ac1533b1f3bc20f258c45af1346e0e9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d0a/ExternC_8h_1ad85f54ad0bab1d5206255e5920261be3" kindref="member">DPCTL_C_EXTERN_C_BEGIN</ref> <ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> <ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref> <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
        <definition>DPCTL_C_EXTERN_C_BEGIN DPCTL_API __dpctl_give DPCTLSyclQueueRef DPCTLQueueMgr_GetCurrentQueue</definition>
        <argsstring>()</argsstring>
        <name>DPCTLQueueMgr_GetCurrentQueue</name>
        <briefdescription>
<para>Get the sycl::queue object that is currently activated for this thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A copy of the current (top of the stack) sycl::queue is returned wrapped inside an opaque DPCTLSyclQueueRef pointer.</para>
</simplesect>
<simplesect kind="see"><para>QMgrHelper::getCurrentQueue() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="54" column="32" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="478" bodyend="481" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="54" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1a563f8335ead48d3586b9837457cd3c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> size_t</type>
        <definition>DPCTL_API size_t DPCTLQueueMgr_GetNumActivatedQueues</definition>
        <argsstring>()</argsstring>
        <name>DPCTLQueueMgr_GetNumActivatedQueues</name>
        <briefdescription>
<para>Get the number of activated queues not including the global or default queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of activated queues.</para>
</simplesect>
Returns inside the number of activated queues not including the global queue (QMgrHelper::active_queues[0]). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="80" column="8" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="435" bodyend="443" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="80" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1ab7fceeb737c6759b799c92b597070d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> size_t</type>
        <definition>DPCTL_API size_t DPCTLQueueMgr_GetNumQueues</definition>
        <argsstring>(DPCTLSyclBackendType BETy, DPCTLSyclDeviceType DeviceTy)</argsstring>
        <name>DPCTLQueueMgr_GetNumQueues</name>
        <param>
          <type><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref></type>
          <declname>BETy</declname>
        </param>
        <param>
          <type><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1a15d8954e4e712e2ec00838a9283d13ff" kindref="member">DPCTLSyclDeviceType</ref></type>
          <declname>DeviceTy</declname>
        </param>
        <briefdescription>
<para>Get the number of available queues for given backend and device type combination. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BETy</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of Sycl backend. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DeviceTy</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of Sycl device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of available queues.</para>
</simplesect>
Returns the number of available queues for a specific backend and device type combination. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="91" column="8" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="449" bodyend="473" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="91" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1a9cfce59d7bfc5033186c20ab6954e737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> <ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref> <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclQueueRef DPCTLQueueMgr_GetQueue</definition>
        <argsstring>(DPCTLSyclBackendType BETy, DPCTLSyclDeviceType DeviceTy, size_t DNum)</argsstring>
        <name>DPCTLQueueMgr_GetQueue</name>
        <param>
          <type><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref></type>
          <declname>BETy</declname>
        </param>
        <param>
          <type><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1a15d8954e4e712e2ec00838a9283d13ff" kindref="member">DPCTLSyclDeviceType</ref></type>
          <declname>DeviceTy</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>DNum</declname>
        </param>
        <briefdescription>
<para>Get a sycl::queue object of the specified type and device id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BETy</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid Sycl backend value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DeviceTy</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of Sycl device (sycl_device_type) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Device id for the device (defaults to 0)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the sycl::queue corresponding to the device is returned wrapped inside a DPCTLSyclDeviceType pointer. A runtime_error exception is raised if no such device exists.</para>
</simplesect>
Returns a copy of a sycl::queue corresponding to the specified device type and device number. A runtime_error gets thrown if no such device exists. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="69" column="1" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="487" bodyend="492" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="69" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1a81b6f33ea0a17c9513a9ea19ddaa3544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> <ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref> <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclQueueRef DPCTLQueueMgr_GetQueueFromContextAndDevice</definition>
        <argsstring>(__dpctl_keep DPCTLSyclContextRef CRef, __dpctl_keep DPCTLSyclDeviceRef DRef)</argsstring>
        <name>DPCTLQueueMgr_GetQueueFromContextAndDevice</name>
        <param>
          <type><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1gadd48a0161309931574aed2025a16ade7" kindref="member">__dpctl_keep</ref> <ref refid="df/d57/dpctl__sycl__types_8h_1accf78808322af80b73da617cb2f15f08" kindref="member">DPCTLSyclContextRef</ref></type>
          <declname>CRef</declname>
        </param>
        <param>
          <type><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1gadd48a0161309931574aed2025a16ade7" kindref="member">__dpctl_keep</ref> <ref refid="df/d57/dpctl__sycl__types_8h_1a8dae76b436012ecbdebbd568e77f440d" kindref="member">DPCTLSyclDeviceRef</ref></type>
          <declname>DRef</declname>
        </param>
        <briefdescription>
<para>Creates a new instance of SYCL queue from SYCL context and SYCL device. </para>
        </briefdescription>
        <detaileddescription>
<para>The instance is not placed into queue manager. The user assumes ownership of the queue reference and should deallocate it using DPCTLQueue_Delete.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Sycl context reference </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Sycl device reference</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the sycl::queue created from given context and device references.</para>
</simplesect>
The function constructs a new SYCL queue instance from SYCL conext and SYCL device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="179" column="1" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="539" bodyend="546" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="179" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1a77d39c59561d3f427a1dde1ce81652db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> bool</type>
        <definition>DPCTL_API bool DPCTLQueueMgr_IsCurrentQueue</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclQueueRef QRef)</argsstring>
        <name>DPCTLQueueMgr_IsCurrentQueue</name>
        <param>
          <type><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1gadd48a0161309931574aed2025a16ade7" kindref="member">__dpctl_keep</ref> const <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
          <declname>QRef</declname>
        </param>
        <briefdescription>
<para>Returns True if the passed in queue and the current queue are the same, else returns False. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>QRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque pointer to a sycl::queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True or False depending on whether the QRef argument is the same as the currently activated queue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="103" column="6" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="497" bodyend="500" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1a60e20b64f0c70866e2e08442962fd621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> void</type>
        <definition>DPCTL_API void DPCTLQueueMgr_PopQueue</definition>
        <argsstring>()</argsstring>
        <name>DPCTLQueueMgr_PopQueue</name>
        <briefdescription>
<para>Pops the top of stack element from DPCTL&apos;s stack of activated sycl::queue objects. </para>
        </briefdescription>
        <detaileddescription>
<para>DPCTLPopSyclQueue only removes the reference from the DPCTL stack of sycl::queue objects. Any instance of the popped queue that were previously acquired by calling DPCTLPushSyclQueue() or <ref refid="d2/db7/dpctl__sycl__queue__manager_8cpp_1aa70cd1c9dca649d309c689f473cd17d8" kindref="member">DPCTLQueueMgr_GetCurrentQueue()</ref> needs to be freed separately. In addition, a runtime_error is thrown when the stack contains only one sycl::queue, i.e., the default queue.</para>
<para><simplesect kind="see"><para>QMgrHelper::popSyclQueue() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="160" column="6" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="529" bodyend="532" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="160" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1a3e7def4dc72567e111b633b1d8f84d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> <ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref> <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclQueueRef DPCTLQueueMgr_PushQueue</definition>
        <argsstring>(DPCTLSyclBackendType BETy, DPCTLSyclDeviceType DeviceTy, size_t DNum)</argsstring>
        <name>DPCTLQueueMgr_PushQueue</name>
        <param>
          <type><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref></type>
          <declname>BETy</declname>
        </param>
        <param>
          <type><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1a15d8954e4e712e2ec00838a9283d13ff" kindref="member">DPCTLSyclDeviceType</ref></type>
          <declname>DeviceTy</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>DNum</declname>
        </param>
        <briefdescription>
<para>Pushes a new sycl::queue object to the top of DPCTL&apos;s thread-local stack of a &quot;activated&quot; queues, and returns a copy of the queue to caller. </para>
        </briefdescription>
        <detaileddescription>
<para>The DPCTL queue manager maintains a thread-local stack of sycl::queue objects to facilitate nested parallelism. The sycl::queue at the top of the stack is termed as the currently activated queue, and is always the one returned by <ref refid="d2/db7/dpctl__sycl__queue__manager_8cpp_1aa70cd1c9dca649d309c689f473cd17d8" kindref="member">DPCTLQueueMgr_GetCurrentQueue()</ref>. DPCTLPushSyclQueueToStack creates a new sycl::queue corresponding to the specified device and pushes it to the top of the stack. A copy of the sycl::queue is returned to the caller wrapped inside the opaque DPCTLSyclQueueRef pointer. A runtime_error exception is thrown when a new sycl::queue could not be created for the specified device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BETy</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of Sycl backend. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DeviceTy</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of Sycl device (sycl_device_type) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Device id for the device (defaults to 0)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the sycl::queue that was pushed to the top of DPCTL&apos;s stack of sycl::queue objects. Nullptr is returned if no such device exists.</para>
</simplesect>
<simplesect kind="see"><para>QMgrHelper::pushSyclQueue() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="144" column="1" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="519" bodyend="524" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="144" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dac/dpctl__sycl__queue__manager_8h_1a1591403f0924782109219208595d0ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref> <ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref> <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclQueueRef DPCTLQueueMgr_SetAsDefaultQueue</definition>
        <argsstring>(DPCTLSyclBackendType BETy, DPCTLSyclDeviceType DeviceTy, size_t DNum)</argsstring>
        <name>DPCTLQueueMgr_SetAsDefaultQueue</name>
        <param>
          <type><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref></type>
          <declname>BETy</declname>
        </param>
        <param>
          <type><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1a15d8954e4e712e2ec00838a9283d13ff" kindref="member">DPCTLSyclDeviceType</ref></type>
          <declname>DeviceTy</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>DNum</declname>
        </param>
        <briefdescription>
<para>Set the default DPCTL queue to the sycl::queue for the given backend and device type combination and return a DPCTLSyclQueueRef for that queue. If no queue was created Null is returned to caller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BETy</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of Sycl backend. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DeviceTy</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of Sycl device (sycl_device_type) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Device id for the device </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the sycl::queue that was set as the new default queue. If no queue could be created then returns Null.</para>
</simplesect>
The function sets the global queue, i.e., the sycl::queue object at QMgrHelper::active_queues[0] vector to the sycl::queue corresponding to the specified device type and id. If not queue was found for the backend and device, Null is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" line="118" column="1" bodyfile="/localdisk/work/akharche/dpctl/dpctl-capi/source/dpctl_sycl_queue_manager.cpp" bodystart="508" bodyend="513" declfile="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h" declline="118" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This header declares a C interface to DPCTL&apos;s sycl::queue manager to maintain a thread local stack of sycl::queues objects for use inside Python programs. The C interface is designed in a way to not have to include the Sycl headers inside a Python extension module, since that would require the extension to be compiled using dpc++ or another Sycl compiler. Compiling the extension with a compiler different from what was used to compile the Python interpreter can cause run-time problems especially on MS Windows. Additionally, the C interface makes it easier to interoperate with Numba without having to deal with C++ name mangling. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===----------<sp/>dpctl_sycl_queue_manager.h<sp/>-<sp/>dpctl-C_API<sp/>---*---C++<sp/>---*---===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>Library<sp/>(dpCtl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="32"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d1c/dpctl__data__types_8h" kindref="compound">dpctl_data_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d57/dpctl__sycl__types_8h" kindref="compound">dpctl_sycl_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d74/dpctl__sycl__context__interface_8h" kindref="compound">dpctl_sycl_context_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d5a/dpctl__sycl__device__interface_8h" kindref="compound">dpctl_sycl_device_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d26/DllExport_8h" kindref="compound">Support/DllExport.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d0a/ExternC_8h" kindref="compound">Support/ExternC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d8c/MemOwnershipAttrs_8h" kindref="compound">Support/MemOwnershipAttrs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="d2/d0a/ExternC_8h_1ad85f54ad0bab1d5206255e5920261be3" kindref="member">DPCTL_C_EXTERN_C_BEGIN</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref><sp/><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1ac1533b1f3bc20f258c45af1346e0e9d9" kindref="member">DPCTLQueueMgr_GetCurrentQueue</ref><sp/>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1a9cfce59d7bfc5033186c20ab6954e737" kindref="member">DPCTLQueueMgr_GetQueue</ref><sp/>(<ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref><sp/>BETy,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1a15d8954e4e712e2ec00838a9283d13ff" kindref="member">DPCTLSyclDeviceType</ref><sp/>DeviceTy,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DNum);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1a563f8335ead48d3586b9837457cd3c13" kindref="member">DPCTLQueueMgr_GetNumActivatedQueues</ref><sp/>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1ab7fceeb737c6759b799c92b597070d52" kindref="member">DPCTLQueueMgr_GetNumQueues</ref><sp/>(<ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref><sp/>BETy,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1a15d8954e4e712e2ec00838a9283d13ff" kindref="member">DPCTLSyclDeviceType</ref><sp/>DeviceTy);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1a77d39c59561d3f427a1dde1ce81652db" kindref="member">DPCTLQueueMgr_IsCurrentQueue</ref><sp/>(<ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1gadd48a0161309931574aed2025a16ade7" kindref="member">__dpctl_keep</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref><sp/>QRef);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1a1591403f0924782109219208595d0ec7" kindref="member">DPCTLQueueMgr_SetAsDefaultQueue</ref><sp/>(<ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref><sp/>BETy,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1a15d8954e4e712e2ec00838a9283d13ff" kindref="member">DPCTLSyclDeviceType</ref><sp/>DeviceTy,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DNum);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1a3e7def4dc72567e111b633b1d8f84d6d" kindref="member">DPCTLQueueMgr_PushQueue</ref><sp/>(<ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref><sp/>BETy,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1a15d8954e4e712e2ec00838a9283d13ff" kindref="member">DPCTLSyclDeviceType</ref><sp/>DeviceTy,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>DNum);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1a60e20b64f0c70866e2e08442962fd621" kindref="member">DPCTLQueueMgr_PopQueue</ref><sp/>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="d6/d26/DllExport_8h_1aed0c117c235d99c414e0b5033d096785" kindref="member">DPCTL_API</ref></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1ga836492a42cdfef6419378dbf8d81f452" kindref="member">__dpctl_give</ref><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="d1/dac/dpctl__sycl__queue__manager_8h_1a81b6f33ea0a17c9513a9ea19ddaa3544" kindref="member">DPCTLQueueMgr_GetQueueFromContextAndDevice</ref>(<ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1gadd48a0161309931574aed2025a16ade7" kindref="member">__dpctl_keep</ref><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1accf78808322af80b73da617cb2f15f08" kindref="member">DPCTLSyclContextRef</ref><sp/>CRef,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/de3/group__MEM__MGMT__ATTR__MACROS_1gadd48a0161309931574aed2025a16ade7" kindref="member">__dpctl_keep</ref><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a8dae76b436012ecbdebbd568e77f440d" kindref="member">DPCTLSyclDeviceRef</ref><sp/>DRef);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="d2/d0a/ExternC_8h_1a6956fffc46b54bcdd0e7fd53cd3a6619" kindref="member">DPCTL_C_EXTERN_C_END</ref></highlight></codeline>
    </programlisting>
    <location file="/localdisk/work/akharche/dpctl/dpctl-capi/include/dpctl_sycl_queue_manager.h"/>
  </compounddef>
</doxygen>
