<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d5/d12/dpctl__sycl__event__interface_8h" kind="file" language="C++">
    <compoundname>dpctl_sycl_event_interface.h</compoundname>
    <includes local="yes">Support/DllExport.h</includes>
    <includes local="yes">Support/ExternC.h</includes>
    <includes local="yes">Support/MemOwnershipAttrs.h</includes>
    <includes local="yes">dpctl_data_types.h</includes>
    <includes refid="d3/d94/dpctl__sycl__enum__types_8h" local="yes">dpctl_sycl_enum_types.h</includes>
    <includes refid="df/d57/dpctl__sycl__types_8h" local="yes">dpctl_sycl_types.h</includes>
    <includes local="yes">dpctl_vector.h</includes>
    <incdepgraph>
      <node id="4">
        <label>Support/MemOwnershipAttrs.h</label>
      </node>
      <node id="2">
        <label>Support/DllExport.h</label>
      </node>
      <node id="7">
        <label>dpctl_sycl_types.h</label>
        <link refid="df/d57/dpctl__sycl__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Support/ExternC.h</label>
      </node>
      <node id="1">
        <label>dpctl_sycl_event_interface.h</label>
        <link refid="d5/d12/dpctl__sycl__event__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>dpctl_sycl_enum_types.h</label>
        <link refid="d3/d94/dpctl__sycl__enum__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>dpctl_data_types.h</label>
      </node>
      <node id="8">
        <label>dpctl_vector.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" prot="public" static="no">
        <type>struct DPCTLEventVector *</type>
        <definition>typedef struct DPCTLEventVector* DPCTLEventVectorRef</definition>
        <argsstring></argsstring>
        <name>DPCTLEventVectorRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="44" column="31" bodyfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/d2d/group___event_interface_1ga0e67256b553c86cc2c01b8ba2ed18378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclEventRef DPCTLEvent_Copy</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_Copy</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>Returns a copy of the DPCTLSyclEventRef object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>DPCTLSyclEventRef object to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new DPCTLSyclEventRef created by copying the passed in DPCTLSyclEventRef object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="94" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="94" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1ga9e1f10306d442c2253fd549fec3a045f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclEventRef DPCTLEvent_Create</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLEvent_Create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>A wrapper for <computeroutput>sycl::event</computeroutput> contructor to construct a new event. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An opaque DPCTLSyclEventRef pointer wrapping a <computeroutput>sycl::event</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="53" column="32" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="53" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1gae16fbf7465ec6d86a63e042100feba77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLEvent_Delete</definition>
        <argsstring>(__dpctl_take DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_Delete</name>
        <param>
          <type>__dpctl_take <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>Deletes the DPCTLSyclEventRef after casting it to a <computeroutput>sycl::event</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque DPCTLSyclEventRef pointer that would be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="82" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1ga30a3bc34163bac7dcb7d03b5666e157c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API <ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref></type>
        <definition>DPCTL_API DPCTLSyclBackendType DPCTLEvent_GetBackend</definition>
        <argsstring>(__dpctl_keep DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_GetBackend</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>Returns a DPCTLSyclBackendType enum value identifying the SYCL backend associated with the event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a <computeroutput>sycl::event</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A DPCTLSyclBackendType enum value identifying the SYCL backend associated with the event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="106" column="22" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="106" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1gaba5717c1481def3ceb1fc0ee6c3dabe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API <ref refid="d3/d94/dpctl__sycl__enum__types_8h_1ac950d7ef3975b7c553971613f4a27021" kindref="member">DPCTLSyclEventStatusType</ref></type>
        <definition>DPCTL_API DPCTLSyclEventStatusType DPCTLEvent_GetCommandExecutionStatus</definition>
        <argsstring>(__dpctl_keep DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_GetCommandExecutionStatus</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>Returns the DPCTLSyclEventStatusType enum value for the DPCTLSyclEventRef argument. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a <computeroutput>sycl::event</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The DPCTLSyclDEventStatusType value corresponding to the event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="118" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="118" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1ga87d98a9b0d6d7de64cf10b7782a746dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API uint64_t</type>
        <definition>DPCTL_API uint64_t DPCTLEvent_GetProfilingInfoEnd</definition>
        <argsstring>(__dpctl_keep DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_GetProfilingInfoEnd</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>Wrapper over <computeroutput>event.get_profiling_info&lt;info::event_profiling::command_end&gt;()</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a <computeroutput>sycl::event</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a value describing the time in nanoseconds when the action associated with the command group (e.g. kernel invocation) finished executing on the device. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="156" column="10" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="156" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1ga82b888e75071bab550a39257f32ef993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API uint64_t</type>
        <definition>DPCTL_API uint64_t DPCTLEvent_GetProfilingInfoStart</definition>
        <argsstring>(__dpctl_keep DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_GetProfilingInfoStart</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>Wrapper over <computeroutput>event.get_profiling_info&lt;info::event_profiling::command_start&gt;()</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a <computeroutput>sycl::event</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a value describing the time in nanoseconds when the action associated with the command group (e.g. kernel invocation) started executing on the device. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="143" column="10" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="143" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1gaa1e8ec801992e1fdb0836463f73fcc85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API uint64_t</type>
        <definition>DPCTL_API uint64_t DPCTLEvent_GetProfilingInfoSubmit</definition>
        <argsstring>(__dpctl_keep DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_GetProfilingInfoSubmit</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>Wrapper over <computeroutput>event.get_profiling_info&lt;info::event_profiling::command_submit&gt;()</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a <computeroutput>sycl::event</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a value describing the time in nanoseconds when the associated command group was submitted to the queue. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="130" column="10" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="130" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1ga77eab99e200776384c7c345c0f2011c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" kindref="member">DPCTLEventVectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLEventVectorRef DPCTLEvent_GetWaitList</definition>
        <argsstring>(__dpctl_keep DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_GetWaitList</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>C-API wrapper for <computeroutput>sycl::event::get_wait_list</computeroutput>. Returns a vector of events that this event still waits for. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a <computeroutput>sycl::event</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A DPCTLEventVectorRef of DPCTLSyclEventRef objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="168" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="168" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1ga3befe2587ca487628646214b7cf3b96e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLEvent_Wait</definition>
        <argsstring>(__dpctl_keep DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_Wait</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>C-API wrapper for sycl::event.wait. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque DPCTLSyclEventRef pointer on which to wait. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="63" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="63" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="df/d2d/group___event_interface_1ga4b955b64cc76d942f20384e4fd566bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLEvent_WaitAndThrow</definition>
        <argsstring>(__dpctl_keep DPCTLSyclEventRef ERef)</argsstring>
        <name>DPCTLEvent_WaitAndThrow</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
          <declname>ERef</declname>
        </param>
        <briefdescription>
<para>C-API wrapper for &apos;sycl::event.wait_and_throw&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ERef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a <computeroutput>sycl::event</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="72" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d5/d12/dpctl__sycl__event__interface_8h_1ad2e72f059ec496cfc832b4eedf77157a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLEventVector_Clear</definition>
        <argsstring>(__dpctl_keep DPCTLEventVectorRef VRef)</argsstring>
        <name>DPCTLEventVector_Clear</name>
        <param>
          <type>__dpctl_keep <ref refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" kindref="member">DPCTLEventVectorRef</ref></type>
          <declname>VRef</declname>
        </param>
        <briefdescription>
<para>Delete all the elements of the std::vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>VRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a vector. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="44" column="280" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="44" declcolumn="280"/>
      </memberdef>
      <memberdef kind="function" id="d5/d12/dpctl__sycl__event__interface_8h_1a99a7c6375d03047627ecaaac276e650c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__dpctl_give <ref refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" kindref="member">DPCTLEventVectorRef</ref></type>
        <definition>__dpctl_give DPCTLEventVectorRef DPCTLEventVector_Create</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLEventVector_Create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create an opaque pointer to a std::vector of opaque pointers wrapping the SYCL data type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns a new opaque pointer to a vector. <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="44" column="94" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="44" declcolumn="94"/>
      </memberdef>
      <memberdef kind="function" id="d5/d12/dpctl__sycl__event__interface_8h_1abf123b90a1262ca3211d4883f4046170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" kindref="member">DPCTLEventVectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLEventVectorRef DPCTLEventVector_CreateFromArray</definition>
        <argsstring>(size_t len, __dpctl_keep DPCTLSyclEventRef *elems)</argsstring>
        <name>DPCTLEventVector_CreateFromArray</name>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref> *</type>
          <declname>elems</declname>
        </param>
        <briefdescription>
<para>Create an opaque pointer to a std::vector created from the input raw array. The elements of the input array are deep copied before inserting the copies into the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the input array.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elems</parametername>
</parameternamelist>
<parameterdescription>
<para>A C array whose elements will be copied into the returned vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a new opaque pointer to a vector. <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="44" column="168" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="44" declcolumn="168"/>
      </memberdef>
      <memberdef kind="function" id="d5/d12/dpctl__sycl__event__interface_8h_1afa2341f80b22492a36946ac7a2a62f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLEventVector_Delete</definition>
        <argsstring>(__dpctl_take DPCTLEventVectorRef VRef)</argsstring>
        <name>DPCTLEventVector_Delete</name>
        <param>
          <type>__dpctl_take <ref refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" kindref="member">DPCTLEventVectorRef</ref></type>
          <declname>VRef</declname>
        </param>
        <briefdescription>
<para>Delete all elements in the vector and then delete the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>VRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a vector to be deleted. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="44" column="232" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="44" declcolumn="232"/>
      </memberdef>
      <memberdef kind="function" id="d5/d12/dpctl__sycl__event__interface_8h_1a92fc3661092893538d93983c071e70ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclEventRef DPCTLEventVector_GetAt</definition>
        <argsstring>(__dpctl_keep DPCTLEventVectorRef VRef, size_t index)</argsstring>
        <name>DPCTLEventVector_GetAt</name>
        <param>
          <type>__dpctl_keep <ref refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" kindref="member">DPCTLEventVectorRef</ref></type>
          <declname>VRef</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the element at the specified index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>VRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a vector.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index postion of the element to be returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The element at the specified postion, if the index position is out of bounds then a nullptr is returned. <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="44" column="401" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="44" declcolumn="401"/>
      </memberdef>
      <memberdef kind="function" id="d5/d12/dpctl__sycl__event__interface_8h_1a65819357fd48d2ed7452b65f9c92ef27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API size_t</type>
        <definition>DPCTL_API size_t DPCTLEventVector_Size</definition>
        <argsstring>(__dpctl_keep DPCTLEventVectorRef VRef)</argsstring>
        <name>DPCTLEventVector_Size</name>
        <param>
          <type>__dpctl_keep <ref refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" kindref="member">DPCTLEventVectorRef</ref></type>
          <declname>VRef</declname>
        </param>
        <briefdescription>
<para>Returns the number of elements in the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>VRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current size of the vector. <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" line="44" column="329" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h" declline="44" declcolumn="329"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This header declares a C API to a sub-set of the sycl::event interface. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===-----<sp/>dpctl_sycl_event_interface.h<sp/>-<sp/>C<sp/>API<sp/>for<sp/>sycl::event<sp/><sp/>-*-C++-*-<sp/>===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>(dpctl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020-2021<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/DllExport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/ExternC.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/MemOwnershipAttrs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dpctl_data_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d94/dpctl__sycl__enum__types_8h" kindref="compound">dpctl_sycl_enum_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d57/dpctl__sycl__types_8h" kindref="compound">dpctl_sycl_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dpctl_vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">DPCTL_C_EXTERN_C_BEGIN</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">//<sp/>Declares<sp/>a<sp/>set<sp/>of<sp/>types<sp/>and<sp/>functions<sp/>to<sp/>deal<sp/>with<sp/>vectors<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DPCTLSyclEventRef.<sp/>Refer<sp/>dpctl_vector_macros.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" refkind="member"><highlight class="normal">DPCTL_DECLARE_VECTOR(Event)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="53"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/><ref refid="df/d2d/group___event_interface_1ga9e1f10306d442c2253fd549fec3a045f" kindref="member">DPCTLEvent_Create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d2d/group___event_interface_1ga3befe2587ca487628646214b7cf3b96e" kindref="member">DPCTLEvent_Wait</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d2d/group___event_interface_1ga4b955b64cc76d942f20384e4fd566bbf" kindref="member">DPCTLEvent_WaitAndThrow</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d2d/group___event_interface_1gae16fbf7465ec6d86a63e042100feba77" kindref="member">DPCTLEvent_Delete</ref>(__dpctl_take<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="93"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="df/d2d/group___event_interface_1ga0e67256b553c86cc2c01b8ba2ed18378" kindref="member">DPCTLEvent_Copy</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref><sp/><ref refid="df/d2d/group___event_interface_1ga30a3bc34163bac7dcb7d03b5666e157c" kindref="member">DPCTLEvent_GetBackend</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1ac950d7ef3975b7c553971613f4a27021" kindref="member">DPCTLSyclEventStatusType</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="df/d2d/group___event_interface_1gaba5717c1481def3ceb1fc0ee6c3dabe9" kindref="member">DPCTLEvent_GetCommandExecutionStatus</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="130"><highlight class="normal">uint64_t<sp/><ref refid="df/d2d/group___event_interface_1gaa1e8ec801992e1fdb0836463f73fcc85" kindref="member">DPCTLEvent_GetProfilingInfoSubmit</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="143"><highlight class="normal">uint64_t<sp/><ref refid="df/d2d/group___event_interface_1ga82b888e75071bab550a39257f32ef993" kindref="member">DPCTLEvent_GetProfilingInfoStart</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="156"><highlight class="normal">uint64_t<sp/><ref refid="df/d2d/group___event_interface_1ga87d98a9b0d6d7de64cf10b7782a746dd" kindref="member">DPCTLEvent_GetProfilingInfoEnd</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="167"><highlight class="normal">__dpctl_give<sp/><ref refid="d5/d12/dpctl__sycl__event__interface_8h_1a76cea07268a5ba53a6b8d1c6f686bc02" kindref="member">DPCTLEventVectorRef</ref></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="df/d2d/group___event_interface_1ga77eab99e200776384c7c345c0f2011c7" kindref="member">DPCTLEvent_GetWaitList</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a42590892ae4324c54f6ddef34009ca03" kindref="member">DPCTLSyclEventRef</ref><sp/>ERef);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">DPCTL_C_EXTERN_C_END</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_event_interface.h"/>
  </compounddef>
</doxygen>
