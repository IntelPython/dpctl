<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d5/d8a/dpctl__sycl__device__selector__interface_8h" kind="file" language="C++">
    <compoundname>dpctl_sycl_device_selector_interface.h</compoundname>
    <includes local="yes">Support/DllExport.h</includes>
    <includes local="yes">Support/ExternC.h</includes>
    <includes local="yes">Support/MemOwnershipAttrs.h</includes>
    <includes refid="df/d57/dpctl__sycl__types_8h" local="yes">dpctl_sycl_types.h</includes>
    <incdepgraph>
      <node id="4">
        <label>Support/MemOwnershipAttrs.h</label>
      </node>
      <node id="2">
        <label>Support/DllExport.h</label>
      </node>
      <node id="5">
        <label>dpctl_sycl_types.h</label>
        <link refid="df/d57/dpctl__sycl__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Support/ExternC.h</label>
      </node>
      <node id="1">
        <label>dpctl_sycl_device_selector_interface.h</label>
        <link refid="d5/d8a/dpctl__sycl__device__selector__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/d27/group___device_selectors_1gaa8a810bcbfd1c1f74d44b2da6a50ef3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclDeviceSelectorRef DPCTLAcceleratorSelector_Create</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLAcceleratorSelector_Create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns an opaque wrapper for sycl::accelerator_selector object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An opaque pointer to a sycl::accelerator_selector object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" line="47" column="41" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" declline="47" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="d8/d27/group___device_selectors_1ga977605ab08808729951c6c33ef22df52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclDeviceSelectorRef DPCTLCPUSelector_Create</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLCPUSelector_Create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns an opaque wrapper for sycl::cpu_selector object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An opaque pointer to a sycl::cpu_selector object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" line="65" column="41" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" declline="65" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="d8/d27/group___device_selectors_1gadf9585e3b7e81b40abc15c843ba99aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclDeviceSelectorRef DPCTLDefaultSelector_Create</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLDefaultSelector_Create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns an opaque wrapper for sycl::default_selector object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An opaque pointer to a sycl::default_selector object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" line="56" column="41" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" declline="56" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="d8/d27/group___device_selectors_1ga30678acd2383c56d7eb78bf99b7bcf7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLDeviceSelector_Delete</definition>
        <argsstring>(__dpctl_take DPCTLSyclDeviceSelectorRef DSRef)</argsstring>
        <name>DPCTLDeviceSelector_Delete</name>
        <param>
          <type>__dpctl_take <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
          <declname>DSRef</declname>
        </param>
        <briefdescription>
<para>Deletes the DPCTLSyclDeviceSelectorRef after casting it to a sycl::device_selector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DSRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque DPCTLSyclDeviceSelectorRef pointer that would be freed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" line="107" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" declline="107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d8/d27/group___device_selectors_1gab3f9bab0a2fcfeaf7858d264cca1253f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API int</type>
        <definition>DPCTL_API int DPCTLDeviceSelector_Score</definition>
        <argsstring>(__dpctl_keep DPCTLSyclDeviceSelectorRef DSRef, __dpctl_keep DPCTLSyclDeviceRef DRef)</argsstring>
        <name>DPCTLDeviceSelector_Score</name>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
          <declname>DSRef</declname>
        </param>
        <param>
          <type>__dpctl_keep <ref refid="df/d57/dpctl__sycl__types_8h_1a8dae76b436012ecbdebbd568e77f440d" kindref="member">DPCTLSyclDeviceRef</ref></type>
          <declname>DRef</declname>
        </param>
        <briefdescription>
<para>Scores the device specified by DRef by device selector specified by DSRef. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DSRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque DPCTLSyclDeviceSelectorRef pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque DPCTLSyclDeviceRef pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A integer score. The negative value indicates select rejected the device. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" line="121" column="5" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" declline="121" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="d8/d27/group___device_selectors_1ga1cfad5b95c7793766cf863378cdccf3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclDeviceSelectorRef DPCTLFilterSelector_Create</definition>
        <argsstring>(__dpctl_keep const char *filter_str)</argsstring>
        <name>DPCTLFilterSelector_Create</name>
        <param>
          <type>__dpctl_keep const char *</type>
          <declname>filter_str</declname>
        </param>
        <briefdescription>
<para>Returns an opaque wrapper for sycl::ONEAPI::filter_selector object based on the passed in filter string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter_str</parametername>
</parameternamelist>
<parameterdescription>
<para>A C string providing a filter based on which to create a device_selector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An opaque pointer to a sycl::ONEAPI::filter_selector object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" line="78" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" declline="78" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d27/group___device_selectors_1ga1dabb6a4adf35a193d6d05240d8ed534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclDeviceSelectorRef DPCTLGPUSelector_Create</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLGPUSelector_Create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns an opaque wrapper for sycl::gpu_selector object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An opaque pointer to a sycl::gpu_selector object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" line="87" column="41" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" declline="87" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="d8/d27/group___device_selectors_1ga3034644611fde17dd85949705d61e25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclDeviceSelectorRef DPCTLHostSelector_Create</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLHostSelector_Create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns an opaque wrapper for sycl::host_selector object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An opaque pointer to a sycl::host_selector object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" line="96" column="41" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h" declline="96" declcolumn="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This header declares C contructors for the various SYCL device_selector classes. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===<sp/>dpctl_sycl_device_selector_interface.h<sp/>-<sp/>device_selector<sp/>C<sp/>API<sp/>-*-C++-*-//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>(dpctl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020-2021<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/DllExport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/ExternC.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/MemOwnershipAttrs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d57/dpctl__sycl__types_8h" kindref="compound">dpctl_sycl_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">DPCTL_C_EXTERN_C_BEGIN</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="47"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref><sp/><ref refid="d8/d27/group___device_selectors_1gaa8a810bcbfd1c1f74d44b2da6a50ef3f" kindref="member">DPCTLAcceleratorSelector_Create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="56"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref><sp/><ref refid="d8/d27/group___device_selectors_1gadf9585e3b7e81b40abc15c843ba99aa8" kindref="member">DPCTLDefaultSelector_Create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="65"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref><sp/><ref refid="d8/d27/group___device_selectors_1ga977605ab08808729951c6c33ef22df52" kindref="member">DPCTLCPUSelector_Create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="77"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="d8/d27/group___device_selectors_1ga1cfad5b95c7793766cf863378cdccf3d" kindref="member">DPCTLFilterSelector_Create</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filter_str);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="87"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref><sp/><ref refid="d8/d27/group___device_selectors_1ga1dabb6a4adf35a193d6d05240d8ed534" kindref="member">DPCTLGPUSelector_Create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="96"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref><sp/><ref refid="d8/d27/group___device_selectors_1ga3034644611fde17dd85949705d61e25d" kindref="member">DPCTLHostSelector_Create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d27/group___device_selectors_1ga30678acd2383c56d7eb78bf99b7bcf7c" kindref="member">DPCTLDeviceSelector_Delete</ref>(__dpctl_take<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref><sp/>DSRef);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/d27/group___device_selectors_1gab3f9bab0a2fcfeaf7858d264cca1253f" kindref="member">DPCTLDeviceSelector_Score</ref>(__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref><sp/>DSRef,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__dpctl_keep<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a8dae76b436012ecbdebbd568e77f440d" kindref="member">DPCTLSyclDeviceRef</ref><sp/>DRef);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">DPCTL_C_EXTERN_C_END</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_device_selector_interface.h"/>
  </compounddef>
</doxygen>
