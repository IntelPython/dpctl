<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d1/dac/dpctl__sycl__queue__manager_8h" kind="file" language="C++">
    <compoundname>dpctl_sycl_queue_manager.h</compoundname>
    <includes local="yes">Support/DllExport.h</includes>
    <includes local="yes">Support/ExternC.h</includes>
    <includes local="yes">Support/MemOwnershipAttrs.h</includes>
    <includes local="yes">dpctl_data_types.h</includes>
    <includes refid="df/d57/dpctl__sycl__types_8h" local="yes">dpctl_sycl_types.h</includes>
    <incdepgraph>
      <node id="4">
        <label>Support/MemOwnershipAttrs.h</label>
      </node>
      <node id="2">
        <label>Support/DllExport.h</label>
      </node>
      <node id="6">
        <label>dpctl_sycl_types.h</label>
        <link refid="df/d57/dpctl__sycl__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Support/ExternC.h</label>
      </node>
      <node id="5">
        <label>dpctl_data_types.h</label>
      </node>
      <node id="1">
        <label>dpctl_sycl_queue_manager.h</label>
        <link refid="d1/dac/dpctl__sycl__queue__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/dde/group___queue_manager_1gaa1e5044153f900fff9b779b30f3b0538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclQueueRef DPCTLQueueMgr_GetCurrentQueue</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLQueueMgr_GetCurrentQueue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current sycl::queue for the thread of execution. </para>
        </briefdescription>
        <detaileddescription>
<para>Dpctl lets an application access a &quot;current queue&quot; as soon as the application loads dpctl. The initial current queue also termed the global queue is a queue created using SYCL&apos;s default_selector. The current queue is set per thread and can be changed for a specific execution scope using the PushQueue and PopQueue functions in this module. The global queue can also be changed by using SetGlobalQueue.</para>
<para>The DPCTLQueueMgr_GetCurrentQueue function returns the current queue in the current scope from where the function was called.</para>
<para><simplesect kind="return"><para>An opaque DPCTLSyclQueueRef pointer wrapping a sycl::queue*. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" line="58" column="32" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" declline="58" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="d0/dde/group___queue_manager_1gac4dacf08c61ae001907660867185ea7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API size_t</type>
        <definition>DPCTL_API size_t DPCTLQueueMgr_GetQueueStackSize</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLQueueMgr_GetQueueStackSize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>A helper function meant for unit testing. Returns the current number of queues pushed to the queue manager&apos;s internal stack of sycl::queue objects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current size of the queue manager&apos;s stack of queues. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" line="135" column="8" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" declline="135" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d0/dde/group___queue_manager_1ga38b8e0f4ea42601d27eda0d5413c5164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API bool</type>
        <definition>DPCTL_API bool DPCTLQueueMgr_GlobalQueueIsCurrent</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLQueueMgr_GlobalQueueIsCurrent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns true if the global queue set for the queue manager is also the current queue. </para>
        </briefdescription>
        <detaileddescription>
<para>The default current queue provided by the queue manager is termed as the global queue. If DPCTLQueueMgr_PushQueue is used to make another queue the current queue, then the global queue no longer remains the current queue till all pushed queues are popped using DPCTLQueueMgr_PopQueue. The DPCTLQueueMgr_GlobalQueueIsCurrent checks if the global queue is also the current queue, i.e., no queues have been pushed and are yet to be popped.</para>
<para><simplesect kind="return"><para>True if the global queue is the current queue, else false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" line="75" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" declline="75" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/dde/group___queue_manager_1ga77d39c59561d3f427a1dde1ce81652db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API bool</type>
        <definition>DPCTL_API bool DPCTLQueueMgr_IsCurrentQueue</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclQueueRef QRef)</argsstring>
        <name>DPCTLQueueMgr_IsCurrentQueue</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
          <declname>QRef</declname>
        </param>
        <briefdescription>
<para>Check if the queue argument is also the current queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>QRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque pointer to a sycl::queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if QRef argument is the the current queue, else False. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" line="85" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/dde/group___queue_manager_1gac5fa7690c281328a070f2409b548df73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLQueueMgr_PopQueue</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLQueueMgr_PopQueue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Pops the top of stack sycl::queue object from the queue manager&apos;s * internal stack of queues and makes the next queue in the stack the current queue. </para>
        </briefdescription>
        <detaileddescription>
<para>DPCTLPopSyclQueue removes the top of stack queue and changes the current queue. If no queue was previously pushed, then a DPCTLQueueMgr_PopQueue call is a no-op. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" line="124" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" declline="124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/dde/group___queue_manager_1gac9c2b3d22c3bfb0797c0b35551d331b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLQueueMgr_PushQueue</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclQueueRef QRef)</argsstring>
        <name>DPCTLQueueMgr_PushQueue</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
          <declname>QRef</declname>
        </param>
        <briefdescription>
<para>Pushes the passed in sycl::queue object to the queue manager&apos;s internal stack of queues and makes the queue the current queue. </para>
        </briefdescription>
        <detaileddescription>
<para>The queue manager maintains a thread-local stack of sycl::queue objects. The <ref refid="d0/dde/group___queue_manager_1gac9c2b3d22c3bfb0797c0b35551d331b7" kindref="member">DPCTLQueueMgr_PushQueue()</ref> function pushes to the stack and sets the passed in DPCTLSyclQueueRef object as the current queue. The current queue is the queue returned by the <ref refid="d0/dde/group___queue_manager_1gaa1e5044153f900fff9b779b30f3b0538" kindref="member">DPCTLQueueMgr_GetCurrentQueue()</ref> function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>QRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque reference to a syc::queue. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" line="111" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d0/dde/group___queue_manager_1gaf767ec0189383390b6bc63835eef1543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLQueueMgr_SetGlobalQueue</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclQueueRef QRef)</argsstring>
        <name>DPCTLQueueMgr_SetGlobalQueue</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref></type>
          <declname>QRef</declname>
        </param>
        <briefdescription>
<para>Resets the global queue using the passed in DPCTLSyclQueueRef the previous global queue is deleted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>QRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque reference to a sycl::device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" line="95" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h" declline="95" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This header declares a set of functions to support a concept of current queue for applications using dpctl. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===----<sp/>dpctl_sycl_queue_manager.h<sp/>-<sp/>A<sp/>manager<sp/>for<sp/>sycl<sp/>queues<sp/>-*-C++-*-<sp/>===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>(dpctl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020-2021<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/DllExport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/ExternC.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/MemOwnershipAttrs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dpctl_data_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d57/dpctl__sycl__types_8h" kindref="compound">dpctl_sycl_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">DPCTL_C_EXTERN_C_BEGIN</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="58"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref><sp/><ref refid="d0/dde/group___queue_manager_1gaa1e5044153f900fff9b779b30f3b0538" kindref="member">DPCTLQueueMgr_GetCurrentQueue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dde/group___queue_manager_1ga38b8e0f4ea42601d27eda0d5413c5164" kindref="member">DPCTLQueueMgr_GlobalQueueIsCurrent</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/dde/group___queue_manager_1ga77d39c59561d3f427a1dde1ce81652db" kindref="member">DPCTLQueueMgr_IsCurrentQueue</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref><sp/>QRef);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dde/group___queue_manager_1gaf767ec0189383390b6bc63835eef1543" kindref="member">DPCTLQueueMgr_SetGlobalQueue</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref><sp/>QRef);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dde/group___queue_manager_1gac9c2b3d22c3bfb0797c0b35551d331b7" kindref="member">DPCTLQueueMgr_PushQueue</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1af23137a8bf20ff63b10db9f7f987799a" kindref="member">DPCTLSyclQueueRef</ref><sp/>QRef);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/dde/group___queue_manager_1gac5fa7690c281328a070f2409b548df73" kindref="member">DPCTLQueueMgr_PopQueue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d0/dde/group___queue_manager_1gac4dacf08c61ae001907660867185ea7a" kindref="member">DPCTLQueueMgr_GetQueueStackSize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">DPCTL_C_EXTERN_C_END</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_queue_manager.h"/>
  </compounddef>
</doxygen>
