<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d3/d02/dpctl__sycl__platform__interface_8h" kind="file" language="C++">
    <compoundname>dpctl_sycl_platform_interface.h</compoundname>
    <includes local="yes">Support/DllExport.h</includes>
    <includes local="yes">Support/ExternC.h</includes>
    <includes local="yes">Support/MemOwnershipAttrs.h</includes>
    <includes local="yes">dpctl_data_types.h</includes>
    <includes refid="d3/d94/dpctl__sycl__enum__types_8h" local="yes">dpctl_sycl_enum_types.h</includes>
    <includes refid="d7/dab/dpctl__sycl__platform__manager_8h" local="yes">dpctl_sycl_platform_manager.h</includes>
    <includes refid="df/d57/dpctl__sycl__types_8h" local="yes">dpctl_sycl_types.h</includes>
    <incdepgraph>
      <node id="1">
        <label>dpctl_sycl_platform_interface.h</label>
        <link refid="d3/d02/dpctl__sycl__platform__interface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Support/MemOwnershipAttrs.h</label>
      </node>
      <node id="2">
        <label>Support/DllExport.h</label>
      </node>
      <node id="8">
        <label>dpctl_sycl_types.h</label>
        <link refid="df/d57/dpctl__sycl__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Support/ExternC.h</label>
      </node>
      <node id="7">
        <label>dpctl_sycl_platform_manager.h</label>
        <link refid="d7/dab/dpctl__sycl__platform__manager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>dpctl_sycl_enum_types.h</label>
        <link refid="d3/d94/dpctl__sycl__enum__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>dpctl_data_types.h</label>
      </node>
      <node id="9">
        <label>dpctl_vector.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="da/dbd/group___platform_interface_1ga5bddf303912d4344608af42735dfd6f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclPlatformRef DPCTLPlatform_Copy</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclPlatformRef PRef)</argsstring>
        <name>DPCTLPlatform_Copy</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
          <declname>PRef</declname>
        </param>
        <briefdescription>
<para>Returns a copy of the DPCTLSyclPlatformRef object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PRef</parametername>
</parameternamelist>
<parameterdescription>
<para>DPCTLSyclPlatformRef object to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new DPCTLSyclPlatformRef created by copying the passed in DPCTLSyclPlatformRef object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="52" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="52" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="da/dbd/group___platform_interface_1ga6b3412dfc90659a68beb778747211115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclPlatformRef DPCTLPlatform_Create</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLPlatform_Create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Creates a new DPCTLSyclPlatformRef for a SYCL platform constructed using SYCL&apos;s default_selector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new DPCTLSyclPlatformRef pointer wrapping a SYCL platform object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="62" column="35" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="62" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="da/dbd/group___platform_interface_1ga71cf26d634573b7cc86b013f65374015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLSyclPlatformRef DPCTLPlatform_CreateFromSelector</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclDeviceSelectorRef DSRef)</argsstring>
        <name>DPCTLPlatform_CreateFromSelector</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref></type>
          <declname>DSRef</declname>
        </param>
        <briefdescription>
<para>Creates a new DPCTLSyclPlatformRef for a SYCL platform constructed using the device_selector wrapped by DPCTLSyclDeviceSelectorRef. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DSRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque pointer to a SYCL device_selector object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new DPCTLSyclPlatformRef pointer wrapping a SYCL platform object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="73" column="35" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="73" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="da/dbd/group___platform_interface_1gaa29d07ce2e25dda5ab2e19cba0e18be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API void</type>
        <definition>DPCTL_API void DPCTLPlatform_Delete</definition>
        <argsstring>(__dpctl_take DPCTLSyclPlatformRef PRef)</argsstring>
        <name>DPCTLPlatform_Delete</name>
        <param>
          <type>__dpctl_take <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
          <declname>PRef</declname>
        </param>
        <briefdescription>
<para>Deletes the DPCTLSyclProgramRef pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PRef</parametername>
</parameternamelist>
<parameterdescription>
<para>An opaque pointer to a sycl::platform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="83" column="6" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="83" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="da/dbd/group___platform_interface_1ga1e33f8b1f629151fb9a20cdf983b3370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API <ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref></type>
        <definition>DPCTL_API DPCTLSyclBackendType DPCTLPlatform_GetBackend</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclPlatformRef PRef)</argsstring>
        <name>DPCTLPlatform_GetBackend</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
          <declname>PRef</declname>
        </param>
        <briefdescription>
<para>Returns a DPCTLSyclBackendType enum value identifying the SYCL backend associated with the platform. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a sycl::platform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A DPCTLSyclBackendType enum value identifying the SYCL backend associated with the platform. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="96" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="96" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="da/dbd/group___platform_interface_1ga41ed6567a6cd47bc50a099d7a18e93e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API const __dpctl_give char *</type>
        <definition>DPCTL_API const __dpctl_give char* DPCTLPlatform_GetName</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclPlatformRef PRef)</argsstring>
        <name>DPCTLPlatform_GetName</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
          <declname>PRef</declname>
        </param>
        <briefdescription>
<para>Returns a C string for the platform name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a sycl::platform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A C string containing the name of the sycl::platform. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="107" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="107" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="da/dbd/group___platform_interface_1gacdbf951bfb74e4578af431fa2a7063cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API __dpctl_give <ref refid="d5/dcf/group___platform_manager_1ga18dc8588af45614eb2f4a9f7b25a6047" kindref="member">DPCTLPlatformVectorRef</ref></type>
        <definition>DPCTL_API __dpctl_give DPCTLPlatformVectorRef DPCTLPlatform_GetPlatforms</definition>
        <argsstring>(void)</argsstring>
        <name>DPCTLPlatform_GetPlatforms</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns an opaque pointer to a vector of SYCL platforms available on the system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="d5/dcf/group___platform_manager_1ga18dc8588af45614eb2f4a9f7b25a6047" kindref="member">DPCTLPlatformVectorRef</ref> containing <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref> objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="143" column="37" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="143" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="da/dbd/group___platform_interface_1ga06c2a3e1b352081fcc0cd7ae55b97766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API const __dpctl_give char *</type>
        <definition>DPCTL_API const __dpctl_give char* DPCTLPlatform_GetVendor</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclPlatformRef PRef)</argsstring>
        <name>DPCTLPlatform_GetVendor</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
          <declname>PRef</declname>
        </param>
        <briefdescription>
<para>Returns a C string corresponding to the vendor providing the platform. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a sycl::platform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A C string containing the name of the vendor provifing the platform. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="119" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="119" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="da/dbd/group___platform_interface_1ga794fb8c5be5cf2a48f63c407cb05bc1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DPCTL_API const __dpctl_give char *</type>
        <definition>DPCTL_API const __dpctl_give char* DPCTLPlatform_GetVersion</definition>
        <argsstring>(__dpctl_keep const DPCTLSyclPlatformRef PRef)</argsstring>
        <name>DPCTLPlatform_GetVersion</name>
        <param>
          <type>__dpctl_keep const <ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></type>
          <declname>PRef</declname>
        </param>
        <briefdescription>
<para>Returns the software driver version of the sycl::platform as a C string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>PRef</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer to a sycl::platform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A C string containing the software driver version of the device associated with the platform. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" line="132" column="1" declfile="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h" declline="132" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This header declares a C interface to sycl::platform interface functions. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//===--<sp/>dpctl_sycl_platform_interface.h<sp/>-<sp/>C<sp/>API<sp/>for<sp/>sycl::platform<sp/>-*-C++-*-<sp/>=//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data<sp/>Parallel<sp/>Control<sp/>(dpctl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020-2021<sp/>Intel<sp/>Corporation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="comment">//===----------------------------------------------------------------------===//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/DllExport.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/ExternC.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Support/MemOwnershipAttrs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dpctl_data_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d94/dpctl__sycl__enum__types_8h" kindref="compound">dpctl_sycl_enum_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/dab/dpctl__sycl__platform__manager_8h" kindref="compound">dpctl_sycl_platform_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d57/dpctl__sycl__types_8h" kindref="compound">dpctl_sycl_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">DPCTL_C_EXTERN_C_BEGIN</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="51"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="da/dbd/group___platform_interface_1ga5bddf303912d4344608af42735dfd6f8" kindref="member">DPCTLPlatform_Copy</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref><sp/>PRef);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="62"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref><sp/><ref refid="da/dbd/group___platform_interface_1ga6b3412dfc90659a68beb778747211115" kindref="member">DPCTLPlatform_Create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="73"><highlight class="normal">__dpctl_give<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref><sp/><ref refid="da/dbd/group___platform_interface_1ga71cf26d634573b7cc86b013f65374015" kindref="member">DPCTLPlatform_CreateFromSelector</ref>(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1a50a1c6c98f4ca4a27a88e53a7f3eeb83" kindref="member">DPCTLSyclDeviceSelectorRef</ref><sp/>DSRef);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="da/dbd/group___platform_interface_1gaa29d07ce2e25dda5ab2e19cba0e18be9" kindref="member">DPCTLPlatform_Delete</ref>(__dpctl_take<sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref><sp/>PRef);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="d3/d94/dpctl__sycl__enum__types_8h_1aa217d239d7e3752c49bd9fd42c71c933" kindref="member">DPCTLSyclBackendType</ref></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="da/dbd/group___platform_interface_1ga1e33f8b1f629151fb9a20cdf983b3370" kindref="member">DPCTLPlatform_GetBackend</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref><sp/>PRef);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="106"><highlight class="normal">__dpctl_give<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="da/dbd/group___platform_interface_1ga41ed6567a6cd47bc50a099d7a18e93e3" kindref="member">DPCTLPlatform_GetName</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref><sp/>PRef);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="118"><highlight class="normal">__dpctl_give<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="da/dbd/group___platform_interface_1ga06c2a3e1b352081fcc0cd7ae55b97766" kindref="member">DPCTLPlatform_GetVendor</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref><sp/>PRef);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="131"><highlight class="normal">__dpctl_give<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="da/dbd/group___platform_interface_1ga794fb8c5be5cf2a48f63c407cb05bc1f" kindref="member">DPCTLPlatform_GetVersion</ref>(__dpctl_keep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/d57/dpctl__sycl__types_8h_1aae750289dcff2c3739f4870086ac7ed0" kindref="member">DPCTLSyclPlatformRef</ref><sp/>PRef);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">DPCTL_API</highlight></codeline>
<codeline lineno="143"><highlight class="normal">__dpctl_give<sp/><ref refid="d5/dcf/group___platform_manager_1ga18dc8588af45614eb2f4a9f7b25a6047" kindref="member">DPCTLPlatformVectorRef</ref><sp/><ref refid="da/dbd/group___platform_interface_1gacdbf951bfb74e4578af431fa2a7063cb" kindref="member">DPCTLPlatform_GetPlatforms</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">DPCTL_C_EXTERN_C_END</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/dpctl/dpctl/libsyclinterface/include/dpctl_sycl_platform_interface.h"/>
  </compounddef>
</doxygen>
