
.. _program_listing_file_dpctl-capi_include_dpctl_sycl_program_interface.h:

Program Listing for File dpctl_sycl_program_interface.h
=======================================================

|exhale_lsh| :ref:`Return to documentation for file <file_dpctl-capi_include_dpctl_sycl_program_interface.h>` (``dpctl-capi/include/dpctl_sycl_program_interface.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   //===---------- dpctl_sycl_program_interface.h - dpctl-C_API --*--C++ --*--===//
   //
   //               Data Parallel Control Library (dpCtl)
   //
   // Copyright 2020 Intel Corporation
   //
   // Licensed under the Apache License, Version 2.0 (the "License");
   // you may not use this file except in compliance with the License.
   // You may obtain a copy of the License at
   //
   //    http://www.apache.org/licenses/LICENSE-2.0
   //
   // Unless required by applicable law or agreed to in writing, software
   // distributed under the License is distributed on an "AS IS" BASIS,
   // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   // See the License for the specific language governing permissions and
   // limitations under the License.
   //
   //===----------------------------------------------------------------------===//
   //===----------------------------------------------------------------------===//
   
   #pragma once
   
   #include "dpctl_data_types.h"
   #include "dpctl_sycl_types.h"
   #include "Support/DllExport.h"
   #include "Support/ExternC.h"
   #include "Support/MemOwnershipAttrs.h"
   
   DPCTL_C_EXTERN_C_BEGIN
   
   DPCTL_API
   __dpctl_give DPCTLSyclProgramRef
   DPCTLProgram_CreateFromOCLSpirv (__dpctl_keep const DPCTLSyclContextRef Ctx,
                                    __dpctl_keep const void *IL,
                                    size_t Length);
   
   DPCTL_API
   __dpctl_give DPCTLSyclProgramRef
   DPCTLProgram_CreateFromOCLSource (__dpctl_keep const DPCTLSyclContextRef Ctx,
                                     __dpctl_keep const char *Source,
                                     __dpctl_keep const char *CompileOpts);
   
   DPCTL_API
   __dpctl_give DPCTLSyclKernelRef
   DPCTLProgram_GetKernel (__dpctl_keep DPCTLSyclProgramRef PRef,
                           __dpctl_keep const char *KernelName);
   
   DPCTL_API
   bool
   DPCTLProgram_HasKernel (__dpctl_keep DPCTLSyclProgramRef PRef,
                           __dpctl_keep const char *KernelName);
   
   DPCTL_API
   void
   DPCTLProgram_Delete (__dpctl_take DPCTLSyclProgramRef PRef);
   
   DPCTL_C_EXTERN_C_END
